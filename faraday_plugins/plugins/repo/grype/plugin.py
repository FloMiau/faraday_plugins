"""
Faraday Penetration Test IDE
Copyright (C) 2013  Infobyte LLC (http://www.infobytesec.com/)
See the file 'doc/LICENSE' for the license information
"""

import json
from faraday_plugins.plugins.plugin import PluginJsonFormat

__author__ = "Joachim Bauernberger"
__license__ = "MIT"
__version__ = "1.0.0"
__maintainer__ = "Joachim Bauernberger"
__email__ = "joachim.bauernberger@protonmail.com"
__status__ = "Development"

"""
Please add "ip", "os", "hostname", ... to the json file generated by grype. 
With jq you can add it with:
jq '. |= {"ip": "192.168.178.166", "os": "Debian", "hostname": "tinkershell"} + .' grype-report.json > grype-plugin-input.json
Hopefully this get's added to syft/grype: https://github.com/anchore/grype/issues/537
"""

class GrypePlugin(PluginJsonFormat):
    def __init__(self, *arg, **kwargs):
        super().__init__(*arg, **kwargs)
        self.id = 'grype'
        self.name = 'Grype JSON Plugin'
        self.extension = ".json" 
        self.plugin_version = '0.0.1'
        self.json_keys = {"hostname", "ip", "os", "matches"}

'''
TODO: use createAndAddVulnToService in case docker images are processed
      currently this only checks the filesystem
TODO: add grype/syft scanning as a faraday command
TODO: add additional json objects part of the grype output and perhaps 
      relevant ...
'''

    def parseOutputString(self, output, debug=True):
        parser = json.loads(output)
        host_id = self.createAndAddHost(parser.get('ip'),parser.get('os'),parser.get('hostname'))
        for match in parser['matches']:
            vuln_id = match.get('vulnerability').get('id')
            desc = match.get('vulnerability').get('description')
            severity = match.get('vulnerability').get('severity')
            artifact_path = match.get('artifact').get('locations')[0].get('path')
            artifact_name = match.get('artifact').get('name')
            artifact_version = match.get('artifact').get('version')
            data = f'{artifact_name} v: {artifact_version} path: {artifact_path}'
            self.createAndAddVulnToHost(host_id,
                name=vuln_id,
                desc=desc,
                ref=match.get('vulnerability').get('urls'),
                severity=severity,
                data=data)

def createPlugin(ignore_info=False):
    return GrypePlugin(ignore_info=ignore_info)
